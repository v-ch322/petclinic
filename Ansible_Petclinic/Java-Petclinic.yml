---

# This playbook is started with a command 'ansible-playbook -i myhost Java-Petclinic.yml'
# File 'myhost' is in the current directory.
# Before the start of the playbook IP of the host should be inserted in file 'myhost', [nserver]

- hosts: nserver
  remote_user: ubuntu
  become: true 
  become_user: root
  become_method: sudo

  tasks:
    - name: Update APT package manager repositories cache
#      become: true
      apt:
        update_cache: yes

    - name: Install Java using Ansible example of application install
#      become: yes
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
           - openjdk-8-jdk

    - name: Setting JAVA_HOME variable
      shell: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
      register: JAVA_HOME

    - name: Setting path to java/bin
      shell: export PATH=$PATH:$JAVA_HOME/bin
      register: JAVA_HOME

    - name: Clone the public repository
      git: 
       repo='https://github.com/spring-projects/spring-petclinic.git'
       dest="/home/ubuntu/spring-petclinic"

    - name: Compilation the Petclinic application using Maven without testing
      command: ./mvnw package -Dmaven.test.skip=true
      args:
        chdir: /home/ubuntu/spring-petclinic/

    - name: Apt install daemonize
      apt:
        name: daemonize
        state: latest
# changed Dec21 2021, the compilation yields spring-petclinic-2.6.0-SNAPSHOT.jar
    - name: Running the daemonized Java application, requires the absolute pathes for all
      command: "daemonize /usr/bin/java -jar /home/ubuntu/spring-petclinic/target/spring-petclinic-2.6.0-SNAPSHOT.jar"
      args:
        chdir: /home/ubuntu/spring-petclinic/

#     These parameters maintain the command in background mode for 10 months (24*60*60x30*10) after the finishing of the playbook
#     They should be placed immediately after chdir with the 'args' indentation
#     async: 25920000
#     poll: 0
